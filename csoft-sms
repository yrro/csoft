#!/usr/bin/python

# csoft - send SMS messages with csoft.co.uk
# Copyright 2007 Sam Morris <sam@robots.org.uk>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# standard library
import os
import sys

# our own modules
from csoft.Service_services import *

req = SubmitMessageRequest ()

req.Username = os.environ['Username']
req.PIN = os.environ['PIN']

req.Recipient = req.new_Recipient ()
req.Recipient.SendTo = sys.argv[1]

req.Message = req.new_Message ()
req.Message.TextMessage = sys.stdin.read ()

loc = ServiceLocator ()
port1 = loc.getServicePortType ()

from urlparse import urlsplit, urlunsplit
fallback_address = list (urlsplit (loc.getServicePortTypeAddress ()))
fallback_address[1] = 'www2.csoft.co.uk'
fallback_address = urlunsplit (fallback_address)
port2 = loc.getServicePortType (url = fallback_address)

ports = (port1, port2)
for port in ports:
    try:
        res = port.SubmitMessage (req)
    except Exception, e:
        # ignore the exception unless this is the last port
        if port == ports[-1]:
            raise
        
        print >> sys.stderr, '<%s> raised %s.%s (%s); trying next port...' % (port.binding.url, e.__class__.__module__, e.__class__.__name__, e)
        continue
    break

report = int (res.Report)
if report not in (-3, -2, 0, 98, 99):
    raise Exception ('Sending failed: %i (%s)' % (report, res.Text))
